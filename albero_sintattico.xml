<?xml version="1.0" encoding="UTF-8" standalone="no"?><ProgramOP><ProcOP>(ID, "getPair")<ResultTypeListOp>(int)(int)</ResultTypeListOp><ProcBodyOP><ResultType><ExprOPList><ExprOP>(INT_CONST, "1")</ExprOP><ExprOP>(INT_CONST, "1")</ExprOP></ExprOPList></ResultType></ProcBodyOP></ProcOP><ProcOP>(ID, "getPairRec")<ResultTypeListOp>(int)(int)</ResultTypeListOp><ProcBodyOP><ResultType><ExprOPList><ExprOP><ExprOP><CallProcOP>(ID,"getPair")</CallProcOP></ExprOP></ExprOP></ExprOPList></ResultType></ProcBodyOP></ProcOP><ProcOP>(ID, "add")<ParDeclOp>int<IdOp>(ID, "a") </IdOp></ParDeclOp><ParDeclOp>int<IdOp>(ID, "b") </IdOp></ParDeclOp><ResultTypeListOp>(int)</ResultTypeListOp><ProcBodyOP><BodyOP><WriteOP><ExprListOP><ExprOP>(STRING_CONST, "returning ")</ExprOP><ExprOP>(ID, "a")</ExprOP><ExprOP>(STRING_CONST, " and ")</ExprOP><ExprOP>(ID, "b")</ExprOP><ExprOP>(STRING_CONST, "
")</ExprOP></ExprListOP></WriteOP></BodyOP><ResultType><ExprOPList><ExprOP><PlusOP>(ID, "a")(ID, "b")</PlusOP></ExprOP></ExprOPList></ResultType></ProcBodyOP></ProcOP><ProcOP>(ID, "getNumbers")<ParDeclOp>int<IdOp>(ID, "i") (ID, "x") (ID, "y") (ID, "z") </IdOp></ParDeclOp><ParDeclOp>string<IdOp>(ID, "s") </IdOp></ParDeclOp><ResultTypeListOp>(int)</ResultTypeListOp><ProcBodyOP><BodyOP><WriteOP><ExprListOP><ExprOP>(ID, "i")</ExprOP><ExprOP>(ID, "x")</ExprOP><ExprOP>(ID, "y")</ExprOP><ExprOP>(ID, "z")</ExprOP></ExprListOP></WriteOP></BodyOP><ResultType><ExprOPList><ExprOP><PlusOP><PlusOP>(ID, "i")<TimesOP>(ID, "x")(ID, "y")</TimesOP></PlusOP>(ID, "z")</PlusOP></ExprOP></ExprOPList></ResultType></ProcBodyOP></ProcOP><ProcOP>(ID, "three")<ParDeclOp>int<IdOp>(ID, "a") </IdOp></ParDeclOp><ParDeclOp>int<IdOp>(ID, "b") </IdOp></ParDeclOp><ParDeclOp>int<IdOp>(ID, "c") </IdOp></ParDeclOp><ResultTypeListOp>(int)(int)(int)</ResultTypeListOp><ProcBodyOP><VarDeclOp>int<IdListInitOp><IdInitOP>(ID, "r1")<PlusOP>(ID, "a")(ID, "b")</PlusOP></IdInitOP></IdListInitOp></VarDeclOp><VarDeclOp>int<IdListInitOp><IdInitOP>(ID, "r2")<PlusOP>(ID, "b")(ID, "c")</PlusOP></IdInitOP></IdListInitOp></VarDeclOp><VarDeclOp>int<IdListInitOp><IdInitOP>(ID, "r3")<PlusOP>(ID, "a")(ID, "c")</PlusOP></IdInitOP></IdListInitOp></VarDeclOp><ResultType><ExprOPList><ExprOP>(ID, "r1")</ExprOP><ExprOP>(ID, "r2")</ExprOP><ExprOP>(ID, "r3")</ExprOP></ExprOPList></ResultType></ProcBodyOP></ProcOP><ProcOP>(ID, "procNew")<ParDeclOp>int<IdOp>(ID, "a") </IdOp></ParDeclOp><ParDeclOp>int<IdOp>(ID, "b") </IdOp></ParDeclOp><ResultTypeListOp>(int)</ResultTypeListOp><ProcBodyOP><BodyOP><WriteOP><ExprListOP><ExprOP>(STRING_CONST, "returning ")</ExprOP><ExprOP>(ID, "a")</ExprOP><ExprOP>(STRING_CONST, " and ")</ExprOP><ExprOP>(ID, "b")</ExprOP><ExprOP>(STRING_CONST, "
")</ExprOP></ExprListOP></WriteOP></BodyOP><ResultType><ExprOPList><ExprOP><ExprOP><CallProcOP>(ID,"getNumbers")<ExprOPList><ExprOP><ExprOP><CallProcOP>(ID,"three")<ExprOPList><ExprOP><ExprOP><CallProcOP>(ID,"getPairRec")</CallProcOP></ExprOP></ExprOP><ExprOP><PlusOP><ExprOP><CallProcOP>(ID,"add")<ExprOPList><ExprOP><ExprOP><CallProcOP>(ID,"getPair")</CallProcOP></ExprOP></ExprOP></ExprOPList></CallProcOP></ExprOP>(INT_CONST, "3")</PlusOP></ExprOP></ExprOPList></CallProcOP></ExprOP></ExprOP><ExprOP>(INT_CONST, "5")</ExprOP><ExprOP>(STRING_CONST, "ok")</ExprOP></ExprOPList></CallProcOP></ExprOP></ExprOP></ExprOPList></ResultType></ProcBodyOP></ProcOP><ProcOP>(ID, "main")<ResultTypeListOp>(void)</ResultTypeListOp><ProcBodyOP><VarDeclOp>int<IdListInitOp><IdInitOP>(ID, "a")</IdInitOP><IdInitOP>(ID, "b")</IdInitOP><IdInitOP>(ID, "c") (INT_CONST, "5")</IdInitOP></IdListInitOp></VarDeclOp><VarDeclOp>int<IdListInitOp><IdInitOP>(ID, "err")<ExprOP><CallProcOP>(ID,"getNumbers")<ExprOPList><ExprOP><ExprOP><CallProcOP>(ID,"three")<ExprOPList><ExprOP><ExprOP><CallProcOP>(ID,"getPairRec")</CallProcOP></ExprOP></ExprOP><ExprOP><PlusOP><ExprOP><CallProcOP>(ID,"add")<ExprOPList><ExprOP><ExprOP><CallProcOP>(ID,"getPair")</CallProcOP></ExprOP></ExprOP></ExprOPList></CallProcOP></ExprOP>(INT_CONST, "3")</PlusOP></ExprOP></ExprOPList></CallProcOP></ExprOP></ExprOP><ExprOP>(INT_CONST, "5")</ExprOP><ExprOP>(STRING_CONST, "ok")</ExprOP></ExprOPList></CallProcOP></ExprOP></IdInitOP></IdListInitOp></VarDeclOp><BodyOP><WriteOP><ExprListOP><ExprOP>(STRING_CONST, "Il valore della variabile err Ã¨ :")</ExprOP><ExprOP>(ID, "err")</ExprOP><ExprOP>(STRING_CONST, "
")</ExprOP></ExprListOP></WriteOP><Stat><CallProcOP>(ID,"add")<ExprOPList><ExprOP>(INT_CONST, "1")</ExprOP><ExprOP>(INT_CONST, "5")</ExprOP></ExprOPList></CallProcOP></Stat><Stat><CallProcOP>(ID,"three")<ExprOPList><ExprOP><ExprOP><CallProcOP>(ID,"getPairRec")</CallProcOP></ExprOP></ExprOP><ExprOP><PlusOP><ExprOP><CallProcOP>(ID,"add")<ExprOPList><ExprOP><ExprOP><CallProcOP>(ID,"getPair")</CallProcOP></ExprOP></ExprOP></ExprOPList></CallProcOP></ExprOP>(ID, "c")</PlusOP></ExprOP></ExprOPList></CallProcOP></Stat><AssignOP><ListID>(ID, "a")(ID, "b")(ID, "c")(ID, "c")</ListID><ListExpr><ExprOP><CallProcOP>(ID,"three")<ExprOPList><ExprOP><ExprOP><CallProcOP>(ID,"getPairRec")</CallProcOP></ExprOP></ExprOP><ExprOP><PlusOP><ExprOP><CallProcOP>(ID,"add")<ExprOPList><ExprOP><ExprOP><CallProcOP>(ID,"getPair")</CallProcOP></ExprOP></ExprOP></ExprOPList></CallProcOP></ExprOP>(ID, "c")</PlusOP></ExprOP></ExprOPList></CallProcOP></ExprOP><PlusOP>(ID, "c")(ID, "c")</PlusOP></ListExpr></AssignOP><WriteOP><ExprListOP><ExprOP>(ID, "a")</ExprOP><ExprOP>(STRING_CONST, ", ")</ExprOP><ExprOP>(ID, "b")</ExprOP><ExprOP>(STRING_CONST, ", ")</ExprOP><ExprOP>(ID, "c")</ExprOP></ExprListOP></WriteOP><AssignOP><ListID>(ID, "b")</ListID><ListExpr><ExprOP><CallProcOP>(ID,"procNew")<ExprOPList><ExprOP>(INT_CONST, "3")</ExprOP><ExprOP>(INT_CONST, "5")</ExprOP></ExprOPList></CallProcOP></ExprOP></ListExpr></AssignOP><WhileOP><BodyOP><WriteOP><ExprListOP><ExprOP>(STRING_CONST, "prima della condizione del while 
")</ExprOP></ExprListOP></WriteOP><ReadlnOP><IdList>(ID, "a")</IdList></ReadlnOP></BodyOP><ExprOP><GreaterThanOP>(ID, "a")(INT_CONST, "3")</GreaterThanOP></ExprOP><BodyOP><WriteOP><ExprListOP><ExprOP>(STRING_CONST, "Il risultato della nuova funzione: ")</ExprOP><ExprOP>(ID, "b")</ExprOP><ExprOP>(STRING_CONST, "
")</ExprOP></ExprListOP></WriteOP><AssignOP><ListID>(ID, "a")</ListID><ListExpr><MinusOP>(ID, "a")(INT_CONST, "1")</MinusOP></ListExpr></AssignOP></BodyOP></WhileOP></BodyOP></ProcBodyOP></ProcOP></ProgramOP>